set availability to false
set open_flag to false

FUNCTION open_check(void) : boolean
    get and store acceleration data in accX, accY and accZ
    IF accZ is less than -1*THRESHOLD_ACCELERATION THEN
        print "closed"
        set open_flag to false
        wait for 800 ms
    ELSE IF accZ is greater than THRESHOLD_ACCELERATION THEN
        print "open"
        set open_flag to true
        set available to true
        wait for 800 ms
    ENDIF
ENDFUNCTION

FUNCTION average_vibration(void) : double
    get and store current time in variable currenttime
    convert currenttime to seconds and store it in currenttimeseconds
    set variable targettimeseconds to be 5 seconds more than currenttimeseconds
    set sum as 0
    WHILE targettimeseconds is greater than currenttimeseconds DO
      get acceleration and store it in the accX, accY and accZ variables
      IF door is opened THEN
        RETURN -1
      ELSE
        get and store current time in currenttime variable
        convert currenttime to seconds and store it in currenttimeseconds
        set accZ to be the absolute value of accZ
        add accZ to the sum
      ENDIF
    ENDWHILE
    divide sum by 5
    RETURN sum;
ENDFUNCTION


FUNCTION Is_shaking(accX:float, accY:float, accZ:float) : boolean
    set avg to be the output of function average_vibration()
    IF avg is greater than THRESHOLD_VIBRATION THEN
        print "vibrating"
        RETURN true
    ELSE IF (avg is less than THRESHOLD_VIBRATION) and (avg is not -1) THEN
        print "not vibrating"
        RETURN false
    ELSE IF avg is -1 THEN
        set available to true
        RETURN false
    ENDIF
ENDFUNCTION

FUNCTION Availability_check(void) : boolean
    get and store current time in variable currenttime
    convert currenttime to seconds and store it in currenttimeseconds
    set variable targettime to be 60 seconds more than currenttimeseconds
    WHILE (targettimeseconds is greater than currenttimeseconds DO
        get acceleration and store it in the accX, accY and accZ variables
        run function open_check
        IF open_flag is true THEN
            RETURN true
        ENDIF
        IF Is_shaking(accX, accY, accZ) is true THEN
            RETURN false
        ENDIF
        get and store current time in variable currenttime
        convert currenttime to seconds and store it in currenttimeseconds
    ENDWHILE
    RETURN true
ENDFUNCTION

attempt to connect to WiFi hotspot
WHILE WiFi not connected DO
    attempt to connect to WiFi hotspot
    OUTPUT "."
    wait for 500ms
ENDWHILE
disable SSL/TLS certificate verification
clear screen

LOOP FOREVER
    IF open_flag is true THEN
        run function open_check()
    ELSE
        get and store acceleration data in accX, accY and accZ
        IF function Is_shaking is true and open_flag is false THEN
            set available to false
        ELSE
            set available to output of Availability_check()
        ENDIF
        IF available is true THEN
            OUTPUT "Available"
        ELSE
            OUTPUT "Not available"
        ENDIF
        attempt to connect to server
        IF attempt was successful THEN
            create the appropriate GET request using available flag
            send GET request to server
            disconnect from server
        ELSE
            OUTPUT "Connection to server failed"
        ENDIF
ENDLOOP
